{"version":3,"sources":["./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/resolvers/view-survey.resolver.ts","./src/app/interceptors/jwt-interceptor.ts","./src/environments/environment.ts","./src/app/services/auth-guard.ts","./src/app/components/add-category/add-category.component.ts","./src/app/components/add-category/add-category.component.html","./src/app/components/edit-survey/edit-survey/edit-survey.component.ts","./src/app/components/edit-survey/edit-survey/edit-survey.component.html","./src/app/components/edit-category/edit-category/edit-category.component.ts","./src/app/components/edit-category/edit-category/edit-category.component.html","./src/app/interceptors/response-handling-interceptor.ts","./src/app/components/administration/survey-list-administration/survey-list-administration.component.ts","./src/app/components/administration/survey-list-administration/survey-list-administration.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/classes/Option.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/list-surveys/list-surveys/list-surveys.component.ts","./src/app/components/list-surveys/list-surveys/list-surveys.component.html","./src/app/app.module.ts","./src/app/components/add-survey/add-survey.component.ts","./src/app/components/add-survey/add-survey.component.html","./src/app/resolvers/view-category/view-category.resolver.ts","./src/app/services/survey-service/survey.service.ts","./src/app/components/administration/category-list-administration/category-list-administration/category-list-administration.component.ts","./src/app/components/administration/category-list-administration/category-list-administration/category-list-administration.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/services/category-service/category.service.ts","./src/app/services/auth-service/auth.service.ts","./src/app/components/pie-chart/pie-chart.component.ts","./src/app/components/pie-chart/pie-chart.component.html","./src/app/components/view-chart/view-chart/view-chart.component.ts","./src/app/components/view-chart/view-chart/view-chart.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SurveyViewModel } from 'src/app/interfaces/SurveyViewModel';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  surveys$ : Observable<SurveyViewModel[]>\n  constructor(private surveyService: SurveyService) { }\n\n  ngOnInit(): void {\n    this.surveys$ = this.surveyService.getLastSurveysFromCategories();\n  }\n\n}\n","<img src=\"../assets/My_Voice_My_Vote_Matters-01.png\" style=\"width: 100%;\">\n\n<div style=\"text-align: center;\">\n<h2 style=\"color:darkcyan;\"><u>Last surveys in our categories:</u></h2>\n\n<div class=\"row\">\n    <div *ngFor=\"let survey of surveys$ | async\" class=\"row\">\n       <div class=\"col listing-surveys\" style=\"text-align: center;\" >\n        <div class=\"card text-white bg-info mb-3 listing-surveys\" style=\"width: 18rem; height: 10rem;\">\n            <div class=\"card-header\">{{survey.categoryName}}</div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{survey.name}}</h5>\n            </div>\n          </div>\n          <button type=\"button\" [routerLink]= \"['../','survey', survey.id]\" class=\"btn btn-outline-success\">Give your vote</button>\n        </div> \n    </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { ISurvey } from '../interfaces/ISurvey';\nimport { SurveyService } from '../services/survey-service/survey.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ViewSurveyResolver implements Resolve<ISurvey> {\n\n  constructor(private surveyService: SurveyService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.surveyService.getSurvey(route.params['id']);\n  }\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth-service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor{\n\n  constructor(private authService: AuthService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    var clonedReq = req.clone({setHeaders:{\n      Authorization: `Bearer ${this.authService.getJwt()}`\n    }});\n\n    return next.handle(clonedReq);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth-service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.authService.isAdmin()) {\n      this.router.navigate([\"\"]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css']\n})\nexport class AddCategoryComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private categoryService: CategoryService, private router : Router) { }\n\n  categoryForm: FormGroup\n\n  ngOnInit(): void {\n    this.categoryForm = this.formBuilder.group({\n      name: new FormControl(\n        '',\n        [Validators.required,\n        Validators.minLength(6)])\n      ,\n      description: new FormControl(\n        '',\n        [Validators.required,\n        Validators.minLength(12)])\n    }\n    )\n  }\n\n  get name() {\n    return this.categoryForm.get('name');\n  }\n\n  get description() {\n    return this.categoryForm.get('description');\n  }\n\n  save() {\n    this.categoryService.postCategory(this.categoryForm.value).subscribe(\n      (res) => {\n        let id = res['id'];\n        this.router.navigate([\"\"])\n      },\n      (error) => { console.log(`error: ${error}`) }\n    );\n  }\n}\n","<h1 style=\"text-align: center;\">Add Category</h1>\n<hr>\n\n<form [formGroup]=\"categoryForm\" style=\"text-align: center\" class=\"col-md-6 offset-md-3\" (submit)=\"save()\">\n\n  <h2>\n    Category Name\n  </h2>\n  <div class=\"form-group row\">\n  <input class=\"form-control\" id=\"name\" formControlName=\"name\" required />\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"name.touched && \n         name.errors?.required\">\n    The name is requred!\n  </div>\n  \n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"name.errors?.minlength &&\n         name.touched\">\n    Name must be at least 6 characters long.\n  </div>\n  <br>\n\n  <h2>\n    Category Description\n  </h2>\n  <div class=\"form-group row\">\n  <input class=\"form-control\" id=\"name\" formControlName=\"description\" required />\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"description.touched && \n         description.errors?.required\">\n    The name is requred!\n  </div>\n  \n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"description.errors?.minlength &&\n         description.touched\">\n    Description must be at least 12 characters long.\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-lg\"  [disabled]=\"categoryForm.invalid\">Save</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Option } from 'src/app/classes/Option';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { ISurvey } from 'src/app/interfaces/ISurvey';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\n\n@Component({\n  selector: 'app-edit-survey',\n  templateUrl: './edit-survey.component.html',\n  styleUrls: ['./edit-survey.component.css']\n})\nexport class EditSurveyComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder, private router : Router,\n    private surveyService: SurveyService, private categorySerivce: CategoryService) {\n\n  }\n  survey: ISurvey;\n  form: FormGroup;\n  categoriesList$: Observable<ICategory[]>;\n\n  ngOnInit(): void {\n    this.survey = this.route.snapshot.data['survey'];\n    this.categoriesList$ = this.categorySerivce.getCategories();\n\n    this.form = this.formBuilder.group({\n      name: new FormControl(this.survey.name,\n        [\n          Validators.required,\n          Validators.minLength(6),\n        ]),\n      categoryId: new FormControl(this.survey.categoryId,\n        [\n          Validators.required\n        ]),\n      options: this.formBuilder.array([]),\n      optionVotes: this.formBuilder.array([]),\n\n    })\n\n    this.fillOptionNames();\n    this.fillOptionVotes();\n  }\n\n  private fillOptionNames() {\n    this.survey.options.forEach(opt => {\n      this.options.push(this.formBuilder.group({\n        option: new FormControl(\n          opt.name, [Validators.required])\n      }))\n    })\n  }\n\n  private fillOptionVotes() {\n    this.survey.options.forEach(opt => {\n      this.optionVotes.push(this.formBuilder.group({\n        optionVote: new FormControl(\n          opt.votes, [Validators.required])\n      }));\n    })\n  }\n\n\n  get options() {\n    return this.form.get('options') as FormArray;\n  }\n\n  get optionVotes() {\n    return this.form.get('optionVotes') as FormArray;\n  }\n\n  removeOption(index: number) {\n    this.options.removeAt(index);\n    this.optionVotes.removeAt(index);\n    this.surveyService.deleteOptionFromSurvey(this.survey.id, this.survey.options[index].id).subscribe(x => {\n      console.log(`Option deleted from ${this.survey.name}`)\n    })\n  }\n\n  addOption() {\n    this.options.push(this.formBuilder.group({\n      option: new FormControl(\n        '', [Validators.required])\n    }));\n    this.optionVotes.push(this.formBuilder.group({\n      optionVote: new FormControl(\n        0, [Validators.required])\n    }))\n\n    let option = new Option();\n    option.name = '';\n    option.votes = 0;\n    this.survey.options.push(option);\n  }\n\n  save() {\n    this.updateSurveyProperties()\n    this.surveyService.updateSurvey(this.survey).subscribe(x => {\n      this.router.navigate([\"survey\",this.survey.id])\n    });\n   \n  }\n  get categories() {\n    return this.categoriesList$;\n  }\n  updateSurveyProperties() {\n    this.survey.name = this.form.value.name;\n    this.survey.categoryId = this.form.value.categoryId;\n    this.survey.options.forEach((option, index) => {\n      option.name = this.form.value.options[index].option;\n      option.votes = this.form.value.optionVotes[index].optionVote;\n    })\n  }\n\n}\n\n","<div class=\"text-center form-center\">\n  <form [formGroup]=\"form\" class=\"col-md-8\">\n    <h2 class=\"text-center font-weight-bold text-uppercase py-4\">Survey Name</h2>\n    <div class=\"form-group row\">\n      <input class=\"form-control\" id=\"name\" formControlName=\"name\" required />\n    </div>\n\n    <h2>Categories</h2>\n    <div *ngFor=\"let cat of categories | async; let catIndex = index\">\n      <input class=\"form-check-input\" formControlName=\"categoryId\" type=\"radio\" [checked]=\"true\" id={{cat.name}} [value]=\"cat.id\">\n      <label class=\"form-check-label\" for={{cat.name}}>{{cat.name}}</label>\n    </div>\n    \n    <h2> Options</h2>  <button class=\"btn btn-primary\" type=\"button\" (click)=\"addOption()\">+</button>\n    <div class=\"row\">\n      <div class=\"col-md-7\">\n        <h3>Name</h3>\n        <div formArrayName=\"options\">\n          <div *ngFor=\"let item of options.controls; let optionIndex = index\" [formGroupName]=\"optionIndex\">\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">{{optionIndex +1}}</div>\n              </div>\n              <input class=\"form-control\" id={{optionIndex}} formControlName=\"option\" required />\n            </div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"options.controls[optionIndex].controls.option.errors?.required && \n                   options.controls[optionIndex].touched\">\n              The name is requred!\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-3\">\n        <h3>Votes</h3>\n        <div formArrayName=\"optionVotes\">\n          <div *ngFor=\"let item of optionVotes.controls; let optionIndex = index\" [formGroupName]=\"optionIndex\">\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">{{optionIndex +1}}</div>\n              </div>\n              <input class=\"form-control\" type=number min=\"0\" id={{optionIndex}} formControlName=\"optionVote\"\n                required />\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" *ngIf=\"options.length > 2\"\n                (click)=\"removeOption(optionIndex)\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"optionVotes.controls[optionIndex].controls.optionVote.errors?.required && \n          optionVotes.controls[optionIndex].touched\">\n              The name is requred!\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button  class=\"btn btn-warning  btn-lg\" style=\"margin-right: 50px;\" [routerLink]=\"['../']\">Back</button>\n    <button type=\"submit\" class=\"btn btn-success btn-lg\" [disabled]='form.invalid' (click)=\"save()\">Save</button>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\nexport class EditCategoryComponent implements OnInit {\n  \n  category : ICategory\n  categoryForm: FormGroup\n\n  constructor(private categoryService: CategoryService,private formBuilder: FormBuilder, \n                private route : ActivatedRoute, private router : Router) { }\n\n  ngOnInit(): void {\n    this.category = this.route.snapshot.data['category']\n\n    this.categoryForm = this.formBuilder.group({\n      name: new FormControl(\n        this.category.name,\n        [Validators.required,\n        Validators.minLength(6)])\n      ,\n      description: new FormControl(\n        this.category.description,\n        [Validators.required,\n        Validators.minLength(12)])\n    }\n    )\n  }\n\n  get name() {\n    return this.categoryForm.get('name');\n  }\n\n  get description() {\n    return this.categoryForm.get('description');\n  }\n\n  save(){\n   console.log(this.categoryForm.value);\n    this.category.name = this.categoryForm.value.name;\n    this.category.description = this.categoryForm.value.description;\n\n    this.categoryService.updateCategory(this.category).subscribe(data =>{\n      this.router.navigate([\"admin/categories\"]);\n    })\n      \n  }\n\n}\n","<h1 style=\"text-align: center;\">Edit Category</h1>\n<hr>\n\n<form [formGroup]=\"categoryForm\" style=\"text-align: center\" class=\"col-md-6 offset-md-3\" (submit)=\"save()\">\n\n  <h2>\n    Category Name\n  </h2>\n  <div class=\"form-group row\">\n  <input class=\"form-control\" id=\"name\" formControlName=\"name\" required />\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"name.touched && \n         name.errors?.required\">\n    The name is requred!\n  </div>\n  \n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"name.errors?.minlength &&\n         name.touched\">\n    Name must be at least 6 characters long.\n  </div>\n  <br>\n\n  <h2>\n    Category Description\n  </h2>\n  <div class=\"form-group row\">\n  <input class=\"form-control\" id=\"name\" formControlName=\"description\" required />\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"description.touched && \n         description.errors?.required\">\n    The name is requred!\n  </div>\n  \n  <div class=\"alert alert-danger\" role=\"alert\" \n  *ngIf=\"description.errors?.minlength &&\n         description.touched\">\n    Description must be at least 12 characters long.\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-lg\"  [disabled]=\"categoryForm.invalid\">Save changes</button>\n</form>","import { HttpEvent, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseHandlingInterceptor {\n  constructor(public toastr: ToastrService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(tap((succses) =>{\n      if(succses instanceof(HttpResponse)){\n        if(succses.url.endsWith(\"add\") || succses.url.endsWith(\"edit\") || succses.url.endsWith(\"register\") || succses.url.endsWith(\"login\"))\n        this.toastr.success(succses.body.message,\"Success\")\n      }\n    }),catchError((error)=>{\n      this.toastr.error(error.error, \"Error\")\n      throw error;\n    }))\n}}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { SurveyListViewModel } from 'src/app/interfaces/SurveyListViewModel';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\n\n@Component({\n  selector: 'app-survey-list-administration',\n  templateUrl: './survey-list-administration.component.html',\n  styleUrls: ['./survey-list-administration.component.css']\n})\nexport class SurveyListAdministrationComponent implements OnInit {\n\n  surveys$: Observable<SurveyListViewModel[]>;\n  filteredSurveys$ : Observable<SurveyListViewModel[]>;\n  categoriesList$: Observable<ICategory[]>;\n  checkedCategory : ''\n\n  constructor(private surveyService: SurveyService, private categorySerivce: CategoryService) { }\n\n  ngOnInit(): void {\n    this.surveys$ = this.surveyService.getAllSurveys();\n    this.filteredSurveys$ =  this.surveys$;\n    this.categoriesList$ = this.categorySerivce.getCategories();\n  }\n\n  delete(id) {\n    this.surveyService.deleteSurvey(id).subscribe(sub => {\n      console.log('Survey was deleted.')\n    });\n    this.surveys$ = this.surveys$.pipe(map(surveys => surveys.filter(x => x.id != id)));\n    this.filteredSurveys$ = this.surveys$.pipe(map(surveys => surveys.filter(x => x.id != id)));\n  }\n\n  filterBy(categoryName){\n    this.checkedCategory = categoryName;\n    this.filteredSurveys$ = this.surveys$.pipe(map(surveys => surveys.filter(cat => cat.category == categoryName)));\n  }\n\n}\n","\n<div style=\"text-align: center;\">\n    <h2><u>Survey Аdministration</u></h2>\n\n    <h2>Categories</h2>\n  <div *ngFor=\"let cat of categoriesList$ | async; let catIndex = index\" class=\"col-md-10 offset-md-1\">\n    <input class=\"form-check-input\" (change)=\"filterBy(cat.name)\" [checked]=\"checkedCategory == cat.name ? true : false\" type=\"radio\" id={{cat.name}} value={{cat.id}}>\n    <label class=\"form-check-label\" for={{cat.name}}>{{cat.name}}</label>\n  </div>\n\n    <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Survey name</th>\n            <th scope=\"col\">Category</th>\n            <th scope=\"col\">Votes</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          \n          <tr *ngFor=\"let survey of filteredSurveys$ | async; let index = index\">\n            <th style=\"width: 5%;\" scope=\"row\">{{index + 1}}</th>\n            <td style=\"width: 40%;\"><a [routerLink]=\"['../../','survey', survey.id]\">{{survey.name}}</a></td>\n            <td style=\"width: 15%;\">{{survey.category}}</td>\n            <td style=\"width: 15%;\">{{survey.votes}}</td>\n            <td style=\"width: 25%;\"><button class=\"link\" (click)=\"delete(survey.id)\">Delete</button> | <button  [routerLink]= \"['../../','survey',survey.id, 'edit']\"  class=\"link\" >Edit</button></td>\n          </tr>\n        \n        </tbody>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ISurvey } from './interfaces/ISurvey';\nimport { interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  constructor() {}\n  ngOnInit(): void {}\n}","\n\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    })\n  }\n\n  login() {\n    this.authService.\n      login(this.form.value).subscribe(data => {\n        this.authService.setToken(data['token']);\n        this.authService.setRole(data['role']);\n        if (this.authService.isAuthenticated()) {\n          this.router.navigate([\"\"]);\n        }\n      })\n    this.form.reset();\n    this.router.navigate([\"auth/login\"])\n\n  }\n\n  get password() {\n    return this.form.get('password')\n  }\n\n  get username() {\n    return this.form.get('username')\n  }\n}\n\n","<div class=\"container\">\n    <h1>Sign In</h1>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"email\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\" >\n        <div *ngIf=\"username.touched && username.errors?.required\" class=\"alert alert-danger\">\n          Please provide your username!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input  type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n        <div *ngIf=\"password.errors?.required && password.touched\" class=\"alert alert-danger\">\n          Password must have at least 6 characters\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"form.invalid\" (click)=\"login()\">Sign In</button>\n    </form>\n  </div>","import { IOption } from '../interfaces/IOption';\n\nexport class Option implements IOption\n{\n    id: number;\n    name: string;\n    votes: number;\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form : FormGroup\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      username : new FormControl('', [Validators.required]),\n      password : new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    })}\n\n   register(){\n     this.authService.\n      register(this.form.value).\n      subscribe((data) => {\n      this.router.navigate(['auth/login'])\n      });  \n  }\n\n  get password() {\n    return this.form.get('password')\n  }\n\n  get confirmPassword() {\n    return this.form.get('confirmPassword')\n  }\n\n  get username(){\n    return this.form.get('username')\n  }\n}\n","<div class=\"container\">\n    <h1>Sign Up</h1>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\" >\n          <div *ngIf=\"username.touched && username.errors?.required\" class=\"alert alert-danger\">\n            Please provide your username!\n          </div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n        <div *ngIf=\"password.errors?.required && password.touched\" class=\"alert alert-danger\">\n          Password must have at least 6 characters!\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" formControlName=\"confirmPassword\">\n        <div *ngIf=\"confirmPassword.errors?.required && confirmPassword.touched\" class=\"alert alert-danger\">\n          Confirm Password must have at least 6 characters!\n        </div>\n        <div *ngIf=\"confirmPassword.value !== password.value && (confirmPassword.touched && password.touched )\" class=\"alert alert-danger\">\n           You passwords are not matching. Please try again.\n          </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"form.invalid\" (click)=\"register()\">Sign Up</button>\n    </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { SurveyViewModel } from 'src/app/interfaces/SurveyViewModel';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\n\n@Component({\n  selector: 'app-list-surveys',\n  templateUrl: './list-surveys.component.html',\n  styleUrls: ['./list-surveys.component.css'],\n})\nexport class ListSurveysComponent implements OnInit {\n  surveys$: Observable<SurveyViewModel[]>\n  category: string\n  description: string\n  constructor(private route: ActivatedRoute, private surveyService: SurveyService, private categorySerivce: CategoryService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.category = params['category'];\n      this.surveys$ = this.surveyService.getSurveysByCategory(this.category)\n      this.categorySerivce.getCategoryDescriptionByName(this.category).subscribe(data =>{\n        this.description = data['description'];\n      });\n    })\n  }\n}\n","\n<h2 class=\"listing-title\"><u>{{category}}</u></h2>\n<h4 class=\"listing-description\"><p>{{description}}</p></h4>\n\n<div class=\"row\">\n<div *ngFor=\"let survey of surveys$ | async\" class=\"row\">\n   <div class=\"col\" style=\"text-align: center;\">\n    <div class=\"card text-white bg-info mb-3 listing-surveys\" style=\"width: 18rem; height: 10rem;\">\n        <div class=\"card-header\">{{survey.categoryName}}</div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{survey.name}}</h5>\n        </div>\n      </div>\n      <button type=\"button\" [routerLink]= \"['../','survey', survey.id]\" class=\"btn btn-outline-success\">Give your vote</button>\n    </div> \n</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddCategoryComponent } from './components/add-category/add-category.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {NgApexchartsModule} from 'ng-apexcharts';\nimport {PieChartComponent } from './components/pie-chart/pie-chart.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AddSurveyComponent } from './components/add-survey/add-survey.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { ViewChartComponent } from './components/view-chart/view-chart/view-chart.component';\nimport { EditSurveyComponent } from './components/edit-survey/edit-survey/edit-survey.component';\nimport { ListSurveysComponent } from './components/list-surveys/list-surveys/list-surveys.component';\nimport { CategoryListAdministrationComponent } from './components/administration/category-list-administration/category-list-administration/category-list-administration.component';\nimport { EditCategoryComponent } from './components/edit-category/edit-category/edit-category.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { JwtInterceptor } from './interceptors/jwt-interceptor';\nimport { ResponseHandlingInterceptor } from './interceptors/response-handling-interceptor';\nimport { ToastrModule } from 'ngx-toastr';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { SurveyListAdministrationComponent } from './components/administration/survey-list-administration/survey-list-administration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCategoryComponent,\n    PieChartComponent,\n    AddSurveyComponent,\n    NavBarComponent,\n    ViewChartComponent,\n    EditSurveyComponent,\n    ListSurveysComponent,\n    CategoryListAdministrationComponent,\n    EditCategoryComponent,\n    LoginComponent,\n    RegisterComponent,\n    LandingComponent,\n    SurveyListAdministrationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgApexchartsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ResponseHandlingInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\n\n@Component({\n  selector: 'app-add-survey',\n  templateUrl: './add-survey.component.html',\n  styleUrls: ['./add-survey.component.css']\n})\nexport class AddSurveyComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private surveyService: SurveyService,\n    private categorySerivce: CategoryService, private router: Router) { }\n\n  surveyForm: FormGroup;\n  categoriesList$: Observable<ICategory[]>;\n\n  ngOnInit(): void {\n    this.categoriesList$ = this.categorySerivce.getCategories();\n    this.surveyForm = this.formBuilder.group({\n      name: new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(6)\n        ]),\n      categoryId: new FormControl('',\n        [\n          Validators.required\n        ]),\n      options: this.formBuilder.array(\n        [this.formBuilder.group({\n          option: new FormControl(\n            '', [Validators.required])\n        }),\n        this.formBuilder.group({\n          option: new FormControl(\n            '', [Validators.required])\n        })]),\n    })\n  }\n\n  get options() {\n    return this.surveyForm.get('options') as FormArray;\n  }\n\n  get categories() {\n    return this.categoriesList$;\n  }\n\n  get name() {\n    return this.surveyForm.get('name');\n  }\n\n  addOption() {\n    this.options.push(this.formBuilder.group({\n      option: new FormControl(\n        '', [Validators.required])\n    }))\n  }\n\n  save() {\n    this.surveyService.postSurvey(this.surveyForm.value).\n      subscribe(\n        (res) => {\n          let id = res['id'];\n          this.router.navigate([\"survey\",id])\n        },\n        (error) => { console.log(`error: ${error}`) }\n      );\n\n\n  }\n\n  removeOption(index: number) {\n    this.options.removeAt(index);\n  }\n\n}\n","<h1 style=\"text-align: center;\">Add Survey</h1>\n<hr>\n\n<form [formGroup]=\"surveyForm\" style=\"text-align: center\" class=\"col-md-6 offset-md-3\" (submit)=\"save()\">\n\n  <h2>\n    Survey Name\n  </h2>\n  <div class=\"form-group row\">\n    <input class=\"form-control\" id=\"name\" formControlName=\"name\" required />\n  </div>\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"name.touched && \n         name.errors?.required\">\n    The name is requred!\n  </div>\n\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"name.errors?.minlength &&\n         name.touched\">\n    Name must be at least 6 characters long.\n  </div>\n  <br>\n  <h2> Options</h2>\n  <div formArrayName=\"options\">\n    <div *ngFor=\"let item of options.controls; let optionIndex = index\" [formGroupName]=\"optionIndex\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">{{optionIndex +1}}</div>\n        </div>\n        <input class=\"form-control\" id={{optionIndex}} formControlName=\"option\" required />\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" *ngIf=\"options.controls.length > 2\"\n          (click)=\"removeOption(optionIndex)\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"options.controls[optionIndex].controls.option.errors?.required && \n             options.controls[optionIndex].touched\">\n        The name is requred!\n      </div>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\" type=\"button\" (click)=\"addOption()\">+</button>\n  <h2>Categories</h2>\n  <div *ngFor=\"let cat of categories | async; let catIndex = index\">\n    <input class=\"form-check-input\" formControlName=\"categoryId\" type=\"radio\" id={{cat.name}} value={{cat.id}}>\n    <label class=\"form-check-label\" for={{cat.name}}>{{cat.name}}</label>\n  </div>\n  <br>\n  <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"surveyForm.invalid\">Save</button>\n</form>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class ViewCategoryResolver implements Resolve<ICategory> {\n\n  constructor(private categoryService: CategoryService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.categoryService.getCategory(route.params['id']);\n  }\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ISurvey } from 'src/app/interfaces/ISurvey';\nimport { SurveyInputModel } from 'src/app/interfaces/SurveyInputModel';\nimport { SurveyListViewModel } from 'src/app/interfaces/SurveyListViewModel';\nimport { SurveyUpdateModel } from 'src/app/interfaces/SurveyUpdateModel';\nimport { SurveyViewModel } from 'src/app/interfaces/SurveyViewModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n  constructor(private http: HttpClient) { }\n\n  private API : string = 'https://zhp-surveys.azurewebsites.net/api';\n\n  public getSurvey(id: number) {\n    var survey = this.http.get<ISurvey>(`${this.API}/surveys/${id}`);\n    return survey;\n  }\n\n  public getAllSurveys() {\n    return this.http.get<SurveyListViewModel[]>(`${this.API}/surveys/all`);\n  }\n\n  public postSurvey(survey): Observable<SurveyInputModel> {\n    let result = {\n      name: survey.name,\n      categoryId: survey.categoryId,\n      options: []\n    }\n    survey.options.map(opt => {\n      result.options.push(opt.option);\n    })\n    \n    return this.http.post<SurveyInputModel>(`${this.API}/surveys`, result);\n  }\n\n  public postVoteForSurvey(surveyId, optionId) {\n    this.setInStorage(surveyId);\n    let votingInfo = [surveyId, optionId];\n    return this.http.post<number[]>(`${this.API}/surveys/voting`, votingInfo);\n  }\n\n  private setInStorage(surveyId){\n    localStorage.setItem(surveyId,surveyId);\n  }\n\n  public alreadyVoted(surveyId){\n    return localStorage.getItem(surveyId) !== null;\n  }\n\n  public deleteSurvey(id) {\n    console.log(id)\n    return this.http.delete(`${this.API}/surveys/${id}`)\n  }\n\n  public deleteOptionFromSurvey(surveyId, optionId){\n      let votingInfo = [surveyId, optionId];\n      return this.http.post<number[]>(`${this.API}/surveys/delete-option`, votingInfo);\n    }\n    \n  public updateSurvey(survey: ISurvey){\n    return this.http.post<ISurvey>(`${this.API}/surveys/update`, survey);\n  }\n\n  public getSurveysByCategory(categoryName: string){\n    return this.http.get<SurveyViewModel[]>(`${this.API}/surveys/category/${categoryName}`);\n  }\n\n  \n  public getLastSurveysFromCategories() : Observable<SurveyViewModel[]>{\n    return this.http.get<SurveyViewModel[]>(`${this.API}/surveys/last`);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { ICategory } from 'src/app/interfaces/ICategory';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\n\n@Component({\n  selector: 'app-category-list-administration',\n  templateUrl: './category-list-administration.component.html',\n  styleUrls: ['./category-list-administration.component.css']\n})\nexport class CategoryListAdministrationComponent implements OnInit {\n  categories$: Observable<ICategory[]>\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.categories$ = this.categoryService.getCategories();\n  }\n\n  delete(id) {\n    this.categories$ = this.categories$.pipe(map(categories => categories.filter(x => x.id != id)));\n    this.categoryService.deleteCategory(id).subscribe(() =>{\n      console.log(`Category was deleted.`)\n    });\n  }\n}","\n<div style=\"text-align: center;\">\n    <h2><u>Categories Аdministration</u></h2>\n    <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Category name</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Surveys</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          \n          <tr *ngFor=\"let category of categories$ | async; let index = index\">\n            <th scope=\"row\">{{index + 1}}</th>\n            <td>{{category.name}}</td>\n            <td>{{category.description}}</td>\n            <td>{{category.surveys.length}}</td>\n            <td><button class=\"link\" (click)=\"delete(category.id)\">Delete</button> | <button  [routerLink]= \"['../../','category',category.id, 'edit']\"  class=\"link\" >Edit</button></td>\n          </tr>\n        \n        </tbody>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\nimport { CategoryService } from 'src/app/services/category-service/category.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  categories: any[]\n  constructor(private categorySerivce: CategoryService, public authService: AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.categorySerivce.getCategories().subscribe(cats => {\n      this.categories = cats;\n    });\n  }\n\n  logout(){\n   this.authService.logout();\n   this.router.navigate([\"\"]);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-white bg-dark\" style=\"font-size: 20px;\">\n    <a class=\"navbar-brand\"  style=\"font-size: 20px;\" href=\"#\">Home</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Categories\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" >\n            <div *ngFor=\"let category of categories\">\n            <a class=\"dropdown-item\" routerLink=\"/{{category.name}}\">{{category.name}}</a>\n          </div>\n          </div>\n        </li>\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='survey/add'>Add survey</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='category/add'>Add category</a>\n          </li>\n          <li class=\"nav-item dropdown\" *ngIf=\"authService.isAdmin()\">\n            <a class=\"nav-link dropdown-toggle\" style=\"color: orange\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Administration\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" >\n              <a class=\"dropdown-item\" routerLink=\"/admin/categories\">Categories</a>\n              <a class=\"dropdown-item\" routerLink=\"/admin/surveys\">Surveys</a>\n            </div>  \n          </li>\n      </ul>\n       \n      <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" *ngIf=\"!authService.isAuthenticated()\" style=\"float: right;\">\n        <a class=\"nav-link\" routerLink='auth/login'>Login</a>\n      </li>\n     \n      <li class=\"nav-item\" *ngIf=\"!authService.isAuthenticated()\" style=\"float: right;\">\n        <a class=\"nav-link\" routerLink='auth/register'>Register</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated()\" style=\" float: right;\">\n        <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\n      </li>\n      </ul>\n      <!-- <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form> -->\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ICategory } from 'src/app/interfaces/ICategory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private API : string = 'https://zhp-surveys.azurewebsites.net/api';\n\n  constructor(private http : HttpClient) { }\n\n  public getCategories() {\n    return this.http.get<ICategory[]>(`${this.API}/categories`)\n  }\n\n  public deleteCategory(id: number) {\n    return this.http.delete(`${this.API}/categories/${id}`)\n  }\n\n  public postCategory(category: string) {\n    return this.http.post(`${this.API}/categories`, category);\n  }\n\n  public getCategory(id: number) {\n    return this.http.get<ICategory>(`${this.API}/categories/${id}`);\n  }\n\n  public updateCategory(category: ICategory){\n    return this.http.post<ICategory>(`${this.API}/categories/update`, category);\n  }\n\n  public getCategoryDescriptionByName(name: string){\n    return this.http.get(`${this.API}/categories/description/${name}`)\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private API : string = 'https://zhp-surveys.azurewebsites.net/api';\n\n  constructor(private http: HttpClient) { }\n\n  login(user) {\n    return this.http.post(`${this.API}/users/login`, user);\n  }\n\n  setToken(token){\n    localStorage.setItem('token',token);\n  }\n\n  setRole(role){\n    localStorage.setItem('role', role);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n\n  register(user) {\n    return this.http.post(`${this.API}/users/register`, user);\n  }\n\n  isAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  \n\n  isAdmin(){\n    if(localStorage.getItem('role') !== null){\n      return localStorage.getItem('role') === 'Admin';\n    };\n  }\n\n  getJwt(){\n     return localStorage.getItem('token');\n  }\n}\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { ChartComponent } from \"ng-apexcharts\";\n\nimport {\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexChart\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  responsive: ApexResponsive[];\n  labels: any;\n};\n\n@Component({\n  selector: \"app-piechart\",\n  templateUrl: \"./pie-chart.component.html\",\n  styleUrls: [\"./pie-chart.component.css\"]\n})\nexport class PieChartComponent implements OnInit {\n  @ViewChild(ChartComponent) chart: ChartComponent;\n  @Input() inputLabels: [];\n  @Input() inputVotes: [];\n  public chartOptions: Partial<ChartOptions>;\n\n  constructor() {\n    this.chartOptions = {\n      chart: {\n        width: 500,\n        type: \"pie\"\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }\n      ]\n    };\n  }\n  ngOnInit(): void {\n  }\n\n  updateSeries(votes){\n    this.chart.updateSeries(votes,true);\n  }\n}\n","<div id=\"chart\">\n    <apx-chart\n      [series]=\"inputVotes\"\n      [chart]=\"chartOptions.chart\"\n      [labels]=\"inputLabels\"\n      [responsive]=\"chartOptions.responsive\"\n    ></apx-chart>\n  </div>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ISurvey } from 'src/app/interfaces/ISurvey';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\nimport { SurveyService } from 'src/app/services/survey-service/survey.service';\nimport { PieChartComponent } from '../../pie-chart/pie-chart.component';\n\n@Component({\n  selector: 'app-view-chart',\n  templateUrl: './view-chart.component.html',\n  styleUrls: ['./view-chart.component.css']\n})\nexport class ViewChartComponent implements OnInit {\n  @ViewChild(PieChartComponent) chart: PieChartComponent;\n\n  constructor(private route: ActivatedRoute,\n    private surveyService: SurveyService, private router: Router, public authService: AuthService) {\n  }\n  survey: ISurvey;\n  votes: number[];\n  labels: string[];\n  isVoted: boolean;\n  votedFor: string;\n  alreadyVoted: boolean;\n\n  ngOnInit(): void {\n    this.survey = this.route.snapshot.data['survey'];\n    this.votes = this.survey.options.map(x => x.votes);\n    this.labels = this.survey.options.map(x => x.name);\n    this.isVoted = false;\n    this.survey.name = this.survey.name.endsWith('?') ? this.survey.name : this.survey.name + '?'\n    this.alreadyVoted = this.surveyService.alreadyVoted(this.survey.id);\n  }\n\n  voteFor(index) {\n    this.votes[index]++\n    this.votedFor = this.labels[index];\n    this.isVoted = true;\n    this.chart.updateSeries(this.votes);\n    this.surveyService.postVoteForSurvey(this.survey.id, this.survey.options[index].id).subscribe(x => {\n      console.log(`Your vote is for ${this.votedFor}`)\n    })\n  }\n\n  deleteSurvey() {\n    this.surveyService.deleteSurvey(this.survey.id).subscribe(survey => {\n      console.log(survey);\n    })\n    this.router.navigate([\"\"]);\n  }\n}\n\n","<div class=\"center\">\n    <h3><u>{{survey.name}}</u></h3>\n    <div class=\"btn-group\" *ngIf=\"!isVoted && !alreadyVoted\">\n        <div *ngFor=\"let option of labels; let labelIndex=index\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"margin-right:20px;\"\n                (click)=\"voteFor(labelIndex)\">{{option.toUpperCase()}}</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"alreadyVoted\">\n        <h3>You already voted in this survey. Come back later, thank you!</h3>\n    </div>\n\n    <div *ngIf=\"isVoted\">\n        <h3>Your vote is for: {{votedFor?.toUpperCase()}}. Thank you!</h3>\n    </div>\n    <div>\n        <app-piechart #pieChart [inputVotes]=\"votes\" [inputLabels]=\"labels\"></app-piechart>\n    </div>\n    <div *ngIf=\"this.authService.isAdmin()\">\n        <h3>Administrative tools:</h3>\n       \n        <button type=\"button\" style=\"margin-right:30px;\" class=\"btn btn-outline-danger\" (click)=\"deleteSurvey()\">Delete Survey</button>\n\n        <button type=\"button\" class=\"btn btn-outline-danger\" [routerLink]=\"['edit']\">Edit Survey</button>\n  \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCategoryComponent } from './components/add-category/add-category.component';\nimport { AddSurveyComponent } from './components/add-survey/add-survey.component';\nimport { CategoryListAdministrationComponent } from './components/administration/category-list-administration/category-list-administration/category-list-administration.component';\nimport { SurveyListAdministrationComponent } from './components/administration/survey-list-administration/survey-list-administration.component';\nimport { EditCategoryComponent } from './components/edit-category/edit-category/edit-category.component';\nimport { EditSurveyComponent } from './components/edit-survey/edit-survey/edit-survey.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ListSurveysComponent } from './components/list-surveys/list-surveys/list-surveys.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ViewChartComponent } from './components/view-chart/view-chart/view-chart.component';\nimport { ViewCategoryResolver } from './resolvers/view-category/view-category.resolver';\nimport { ViewSurveyResolver } from './resolvers/view-survey.resolver';\nimport { AuthGuard } from './services/auth-guard';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: LandingComponent,\n  },\n  {\n    path: \"category/add\",\n    component: AddCategoryComponent,\n  },\n  {\n    path: \"survey/add\",\n    component: AddSurveyComponent,\n  },\n  {\n    path: \"survey/:id\",\n    component: ViewChartComponent,\n    resolve: { survey: ViewSurveyResolver }\n  },\n  {\n    path: \"survey/:id/edit\",\n    component: EditSurveyComponent,\n    resolve: { survey: ViewSurveyResolver }\n  },\n  {\n    path: \":category\",\n    component: ListSurveysComponent,\n  },\n  {\n    path: \"category/:id/edit\",\n    component: EditCategoryComponent,\n    resolve: { category: ViewCategoryResolver }\n  },\n  {\n    path: \"admin/categories\",\n    component: CategoryListAdministrationComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"admin/surveys\",\n    component: SurveyListAdministrationComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"auth/login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"auth/register\",\n    component: RegisterComponent,\n  }];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}